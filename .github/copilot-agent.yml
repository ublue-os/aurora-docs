# GitHub Copilot Coding Agent Environment Configuration
#
# This configuration file preinstalls tools and dependencies for the aurora-docs repository
# to speed up GitHub Copilot coding agent operations. Based on CI workflows and build requirements.
#
# Reference: https://docs.github.com/en/enterprise-cloud@latest/copilot/how-tos/use-copilot-agents/coding-agent/customize-the-agent-environment

# Environment specification
environment:
  # Base operating system (consistent with CI)
  image: ubuntu-latest

  # Required Node.js version (from package.json engines: ">=18.0", recommended 20.19.4+)
  node: "20"

  # Environment variables for optimal development
  variables:
    NODE_ENV: "development"
    DOCUSAURUS_DISABLE_CHUNK_CONCATENATION: "true"
    FORCE_COLOR: "1"
    CI: "false"

# Preinstall tools and dependencies
preinstall:
  # System packages
  system:
    - curl
    - git
    - build-essential

  # Language runtimes
  languages:
    # Node.js 20.x (primary runtime)
    - name: nodejs
      version: "20"
    # Rust (for typos-cli)
    - name: rust
      version: stable

  # Package managers (npm comes with Node.js)
  package_managers:
    - npm

  # Additional tools from package registries
  tools:
    # Bun package manager (used in CI workflows for faster builds)
    - name: bun
      install: |
        curl -fsSL https://bun.sh/install | bash
        echo 'export PATH="$HOME/.bun/bin:$PATH"' >> ~/.bashrc
        source ~/.bashrc
      timeout: 60

    # typos-cli for spell checking (Rust crate)
    - name: typos-cli
      install: |
        cargo install typos-cli
        echo "Installed typos-cli for spell checking"
      timeout: 90

    # GitHub CLI for repository management
    - name: gh-cli
      install: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh -y
      timeout: 30

# Project setup
setup:
  # Install project dependencies
  dependencies:
    # Primary dependency installation (takes ~50-60 seconds)
    - name: npm-install
      command: npm install
      timeout: 120

  # Verify installation
  verification:
    - node --version
    - npm --version
    - bun --version
    - typos --version
    - gh --version
    - echo "All tools installed successfully"

# Quick reference for common development tasks
commands:
  # Build and development
  build: "npm run build"
  dev: "npm run start"
  serve: "npm run serve"

  # Code quality and validation
  typecheck: "npm run typecheck"
  format: "npm run prettier"
  format_check: "npm run prettier-lint"
  spell_check: "typos --config ./typos.toml ./README.md ./docs"

  # Complete validation pipeline (run before committing)
  validate: |
    npm run prettier
    npm run typecheck
    npm run build
    typos --config ./typos.toml ./README.md ./docs

  # Development shortcuts
  quick_test: "npm run typecheck && npm run prettier-lint"
  full_build: "npm run build && npm run serve"

  # Docker workflows
  docker_dev: "docker compose up"
  docker_build: "docker compose build"

# Project metadata
project:
  name: "aurora-docs"
  description: "Docusaurus TypeScript documentation site for Aurora Linux"
  type: "documentation"

  # Performance expectations
  timings:
    npm_install: "50-60 seconds"
    build: "5-20 seconds"
    dev_server_start: "15 seconds"

  # Development server
  dev_server:
    url: "http://localhost:3000"
    hot_reload: true

  # Known issues and warnings (expected during build)
  known_issues:
    - "AVIF image warnings are non-critical"
    - "Broken anchor warnings in rescue-mode docs"
    - "React peer dependency warnings expected"
    - "typos-cli false positive 'ba' in local-ai.md"

  # Critical workflow notes
  warnings:
    - "NEVER CANCEL npm install (takes up to 60 seconds)"
    - "NEVER CANCEL cargo install typos-cli (takes up to 90 seconds)"
    - "Set timeouts to 120+ seconds for npm operations"

# IDE and Editor Configuration
ide_config:
  # VS Code settings for optimal development
  vscode:
    recommended_extensions:
      - "esbenp.prettier-vscode"
      - "bradlc.vscode-tailwindcss"
      - "ms-vscode.vscode-typescript-next"
      - "streetsidesoftware.code-spell-checker"
      - "ms-vscode-remote.remote-containers"
    settings:
      "editor.formatOnSave": true
      "editor.defaultFormatter": "esbenp.prettier-vscode"
      "typescript.preferences.importModuleSpecifier": "relative"

  # Development container support
  devcontainer:
    enabled: true
    config_path: ".devcontainer/devcontainer.json"
    features:
      - "ghcr.io/devcontainers-community/npm-features/prettier:1"
